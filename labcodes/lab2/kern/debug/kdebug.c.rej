--- lab1/kern/debug/kdebug.c	2019-04-01 21:29:48.779705137 +0800
+++ lab2/kern/debug/kdebug.c	2019-04-01 21:29:48.783705137 +0800
@@ -3,7 +3,10 @@
 #include <stab.h>
 #include <stdio.h>
 #include <string.h>
+#include <sync.h>
 #include <kdebug.h>
+#include <kmonitor.h>
+#include <assert.h>
 
 #define STACKFRAME_DEPTH 20
 
@@ -302,44 +305,5 @@
       *           NOTICE: the calling funciton's return addr eip  = ss:[ebp+4]
       *                   the calling funciton's ebp = ss:[ebp]
       */
-
-	uint32_t ebp_v = read_ebp();
-	uint32_t eip_v = read_eip();
-	struct eipdebuginfo info;
-	int err;
-
-	int i, j;
-	for(j = 0; j < STACKFRAME_DEPTH; j++)
-	{
-		cprintf("ebp:0x%08x eip:0x%08x", ebp_v, eip_v);
-
-		cprintf(" args");
-
-		for(i = 0; i < 4; i++)
-		{
-			if(i == 0)
-			{
-				cprintf(":");
-			}
-			else
-			{
-				cprintf(" ");
-			}
-			cprintf("0x%08x", ((uint32_t*)(ebp_v+2))[i]);
-		}
-
-		cprintf("\n");
-
-//		struct eipdebuginfo info;
-		err = debuginfo_eip(eip_v, &info) != 0;
-		print_debuginfo(eip_v-1);
-		if(err != 0)
-		{
-			break;
-		}
-
-		eip_v = *((uint32_t*)(ebp_v+4));
-		ebp_v = *((uint32_t*)ebp_v);
-	}
 }
 
